# This file was automatically generated by makemake.
# Do not edit it directly!
# Any changes you make will be silently overwritten.

# Edit this file to define constants and custom build targets.
# Please refer to the makemake documentation for more information.
#
# To compile multiple versions of a program or library, please study
#     http://www.its.caltech.edu/~jafl/jcc/multi_version.html
DEBUG = n

ifeq ($(DEBUG),y)
  DEBFLAGS = -O -g -DFSSC_DEBUG # "-O" is needed to expand inlines
else
  DEBFLAGS = -O2
endif

# Useful directories

MYCODEDIR := .

# Directories to search for header files

SEARCHDIRS := -I- -I${MYCODEDIR} -I/usr/src/linux/include

# makemake variables
#undefine this one if not using modversions
DEPENDFLAGS :=   -D__KERNEL__ -DMODULE -Wall $(DEBFLAGS) ${SEARCHDIRS}

#undefine this one if using modversions, I am sure that this is detectable...but
#DEPENDFLAGS :=   -D__KERNEL__ -DMODULE -DMODVERSIONS -Wall $(DEBFLAGS) ${SEARCHDIRS}

# C preprocessor (C, C++, FORTRAN)

CPPFLAGS = 

# C compiler

CC     := gcc
CFLAGS  = ${DEPENDFLAGS}

%.o : %.c
	${CC} ${CPPFLAGS} ${CFLAGS} -c $< -o $@

# C++ compiler

CXX      := g++
CXXFLAGS  = ${DEPENDFLAGS}

%.o : %.cc
	${CXX} ${CPPFLAGS} ${CXXFLAGS} -c $< -o $@

%.o : %.C
	${CXX} ${CPPFLAGS} ${CXXFLAGS} -c $< -o $@

%.o : %.cpp
	${CXX} ${CPPFLAGS} ${CXXFLAGS} -c $< -o $@

%.o : %.cxx
	${CXX} ${CPPFLAGS} ${CXXFLAGS} -c $< -o $@

# FORTRAN compiler

FC     := f77
FFLAGS  = 

# C/C++/Eiffel/FORTRAN linker

LINKER    :=$(LD)
LDFLAGS    = -r 
LOADLIBS := 

# Java compiler

JAVAC  := javac
JFLAGS  = 
JAR    := jar

%.class : %.java
	${JAVAC} ${JFLAGS} $<


# This is what makemake added


# fsccp.o

fsccp.o : ./close.o ./fsccdrv.o ./ioctl.o ./isr.o ./open.o ./poll.o ./read.o ./seek.o ./support.o ./sync.o ./write.o
	${LINKER} ${LDFLAGS} -o $@ ${filter-out %.a %.so, $^} ${LOADLIBS}

# target for making everything

.PHONY : all
all: fsccp.o

.PHONY : tools
tools:
	$(MAKE) -C utils/
	$(MAKE) -C utils/ install
# target for removing all object files

.PHONY : tidy
tidy::
	@${RM} core ./close.o ./fsccdrv.o ./ioctl.o ./isr.o ./open.o ./poll.o ./read.o ./seek.o ./support.o ./sync.o ./write.o

# target for removing all object files

.PHONY : clean
clean:: tidy
	@${RM} fsccp.o
	$(MAKE) -C utils/ clean
# list of all source files

MM_ALL_SOURCES := ./close.c ./fsccdrv.c ./ioctl.c ./isr.c ./open.c ./poll.c ./read.c ./seek.c ./support.c ./sync.c ./write.c


# target for checking a source file

CHECKSYNTAXFILE := ${basename ${filter %${CHECKSTRING}, ${MM_ALL_SOURCES}}}

.PHONY : checksyntax
checksyntax:
  ifneq (${CHECKSYNTAXFILE},)
	@${MAKE} ${addsuffix .o, ${CHECKSYNTAXFILE}}
  else
	@echo No target to make ${CHECKSTRING}
  endif


# target for touching appropriate source files

.PHONY : touch
touch::
	@list=$$(grep -l ${TOUCHSTRING} ${MM_ALL_SOURCES}); \
     for file in $$list; do { echo $$file; touch $$file; } done


# target for calculating dependencies (MAKEMAKE)

.PHONY : jdepend
jdepend:
	@${MAKEMAKE} --depend Makefile -- ${DEPENDFLAGS} --  ./close.c ./close.o ./fsccdrv.c ./fsccdrv.o ./ioctl.c ./ioctl.o ./isr.c ./isr.o ./open.c ./open.o ./poll.c ./poll.o ./read.c ./read.o ./seek.c ./seek.o ./support.c ./support.o ./sync.c ./sync.o ./write.c ./write.o



