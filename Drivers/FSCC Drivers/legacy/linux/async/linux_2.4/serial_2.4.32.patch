--- serial.c	2005-11-16 13:12:54.000000000 -0600
+++ serial.new	2007-04-13 11:54:11.000000000 -0500
@@ -4075,6 +4075,78 @@
 #endif	/* ENABLE_SERIAL_PCI || ENABLE_SERIAL_PNP */
 
 #ifdef ENABLE_SERIAL_PCI
+#define PCI_VENDOR_ID_AMCC   0x10e8
+#define PCI_DEVICE_ID_FC4222 0x82c5
+#define PCI_DEVICE_ID_FC4224 0x82c4
+#define PCI_DEVICE_ID_FC2324 0x82ca
+#define PCI_DEVICE_ID_FC2328 0x8291
+#define PCI_DEVICE_ID_FCIG4221 0x82c6
+#define PCI_DEVICE_ID_FCIG2322 0x82c7
+#define PCI_VENDOR_ID_COMMTECH_FASTCOM 0x18F7
+#define PCI_DEVICE_ID_FC4222335 0x0004
+#define PCI_DEVICE_ID_FC4224335 0x0002
+#define PCI_DEVICE_ID_FC2324335 0x000a
+#define PCI_DEVICE_ID_FSCC      0x000f
+
+
+int __devinit
+pci_fastcom_fscc_fn(struct pci_dev *dev, struct pci_board *board, int enable)
+{
+       if (!enable) return 0;
+	if(dev->device==PCI_DEVICE_ID_FSCC)
+	{
+	unsigned int fastcom_features;
+	fastcom_features = pci_resource_start(dev,2);
+	//could re/program clock generator here
+	//or set board specific features (rx echo cancel/485 enable)
+	//default to default clock (24MHz) and 422 mode
+	//+force async ON
+        //features register breakdown:
+	//bit 31 - jtag enable
+	//bit 30 - tck
+	//bit 29 - tdi
+	//bit 28 - tms
+	//bit 27 - tdo
+	//bit 26 - NC
+	//bit 25 - UART chB enable
+	//bit 24 - UART chA enable
+	//bit 23 - NC
+	//bit 22 - SD 485 enable chB
+	//bit 21 - TT 485 enable chB
+	//bit 20 - RxEcho cancel enable chB
+	//bit 19 - NC
+	//bit 18 - SD 485 enable chA
+	//bit 17 - TT 485 enable chA
+	//bit 16 - RxEcho cancel enable chA
+	//bit 15 - NC
+	//bit 14 - NC
+	//bit 13 - NC
+	//bit 12 - NC
+	//bit 11 - Strobe chB
+	//bit 10 - NC
+	//bit 9  - clk chB
+	//bit 8  - dta chB
+	//bit 7  - NC
+	//bit 6  - NC
+	//bit 5  - NC
+	//bit 4  - NC
+	//bit 3  - Strobe chA
+	//bit 2  - NC
+	//bit 1  - clk chA
+	//bit 0  - dta chA
+	//
+	//bits 31-26 should always be 0
+	//bits 15-0 shoudl always be 0
+	outl(0x03000000,fastcom_features);
+	//if you want to use the FSCC sync ports and you are using this code you must re-program this register
+	//after this driver loads.
+	}
+       return 0;
+}
+EXPORT_SYMBOL(pci_fastcom_fscc_fn);
+
+
+
 /*
  * Some PCI serial cards using the PLX 9050 PCI interface chip require
  * that the card interrupt be explicitly enabled or disabled.  This
@@ -4398,6 +4470,7 @@
 	pbn_computone_4,
 	pbn_computone_6,
 	pbn_computone_8,
+	pbn_fastcom_fscc,
 };
 
 static struct pci_board pci_boards[] __devinitdata = {
@@ -4506,6 +4579,9 @@
 		0x40, 2, NULL, 0x200 },
 	{ SPCI_FL_BASE0, 8, 921600, /* IOMEM */		   /* pbn_computone_8 */
 		0x40, 2, NULL, 0x200 },
+	{ SPCI_FL_BASE1, 2, 921600,			   /* pbn_fastcom_fscc */
+		8, 0, pci_fastcom_fscc_fn },
+
 };
 
 /*
@@ -4948,6 +5024,9 @@
 	{	PCI_VENDOR_ID_DCI, PCI_DEVICE_ID_DCI_PCCOM8,
 		PCI_ANY_ID, PCI_ANY_ID, 0, 0,
 		pbn_dci_pccom8 },
+	{	PCI_VENDOR_ID_COMMTECH_FASTCOM, PCI_DEVICE_ID_FSCC,
+		PCI_ANY_ID, PCI_ANY_ID, 0, 0,
+		pbn_fastcom_fscc },
 
        { PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID, PCI_ANY_ID,
 	 PCI_CLASS_COMMUNICATION_SERIAL << 8, 0xffff00, },
